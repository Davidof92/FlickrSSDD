package com.mycompany.flickrssdd;

import com.flickr4java.flickr.Flickr;
import com.flickr4java.flickr.FlickrException;
import com.flickr4java.flickr.REST;
import com.flickr4java.flickr.RequestContext;
import com.flickr4java.flickr.photos.Photo;
import com.flickr4java.flickr.photos.PhotoList;
import com.flickr4java.flickr.photosets.Photoset;
import com.flickr4java.flickr.photosets.Photosets;
import com.flickr4java.flickr.photosets.PhotosetsInterface;
import com.urjc.java.pruautorizacionesflickr.AutorizacionesFlickr;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.image.BufferedImage;
import java.util.Collection;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author USUARIO100
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    protected Flickr fl;
    AutorizacionesFlickr autorizacionesFlickr;
    protected Collection<Photoset> photosets;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        try {
            initComponents();
            autorizacionesFlickr = new AutorizacionesFlickr();
            fl = new Flickr(autorizacionesFlickr.getApi_key(),
                    autorizacionesFlickr.getSecret(),
                    new REST());
            RequestContext requestContext
                    = RequestContext.getRequestContext();
            requestContext.setAuth(autorizacionesFlickr.getAuth());

            Photosets list = fl.getPhotosetsInterface().getList(autorizacionesFlickr.getUserID());
            photosets = list.getPhotosets();
            this.jComboBox1.removeAllItems();
            this.jComboBox1.addItem("-----------------------------------------------------------------------------------------------------------------------------");
            photosets.stream().forEach((ps) -> {
                ContenedorAlbum contenedor = new ContenedorAlbum(ps.getId(), ps.getTitle());
                this.jComboBox1.addItem(contenedor);
            });
            jComboBox1.addItemListener(new ItemListener() {

                @Override
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        if (jComboBox1.getSelectedIndex() > 0) {
                            System.out.println("SELECTED");
                            System.out.println("Leemos imágenes del album");
                            ContenedorAlbum album = (ContenedorAlbum) jComboBox1.getSelectedItem();
                            System.out.println(album);
                            imgs.removeAll();

                            PhotosetsInterface photosetsInterface = fl.getPhotosetsInterface();
                            try {
                                PhotoList<Photo> photoList = photosetsInterface.getPhotos(album.getId(), new HashSet<String>(), 0, 0, 0);
                                DefaultListModel modelo = new DefaultListModel();
                                photoList.stream().forEach((pl) -> {
                                    ContenedorFoto cf = new ContenedorFoto(pl.getTitle(), pl);
                                    modelo.addElement(cf);
                                });
                                imgs.setModel(modelo);
                                //fl.getPhotosetsInterface().getPhotosetCount("");
                            } catch (FlickrException ex) {
                                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            imgs.removeAll();
                            DefaultListModel modelo = new DefaultListModel();
                            imgs.setModel(modelo);
                        }
                    }
                }
            });
        } catch (FlickrException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        imgs = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Seleccionar álbum");

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Subir nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Crear Album");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        imgs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(imgs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, 534, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SubirNuevoAlbum sna = new SubirNuevoAlbum(this, true);
        sna.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AniadirAlbum aa = new AniadirAlbum(this, true);
        aa.setVisible(true);
        if (aa.isSave()) {
            try {
                String nameAlbum = aa.getAlbumName();
                fl.getPhotosetsInterface().create(nameAlbum, "", "");
                this.jComboBox1.removeAllItems();
                Photosets list = fl.getPhotosetsInterface().getList(autorizacionesFlickr.getUserID());
                photosets = list.getPhotosets();
                photosets.stream().forEach((ps) -> {
                    ContenedorAlbum contenedor = new ContenedorAlbum(ps.getId(), ps.getTitle());
                    this.jComboBox1.addItem(contenedor);
                });
            } catch (FlickrException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void imgsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgsMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int index = imgs.locationToIndex(evt.getPoint());
            System.out.println(index);
            ContenedorFoto cf = (ContenedorFoto) imgs.getModel().getElementAt(index);
            System.out.println(cf);
            try {
                RequestContext.getRequestContext().setAuth(autorizacionesFlickr.getAuth());
                Photo photo = fl.getPhotosInterface().getPhoto(cf.getImagen().getId());
                //Photo pp = fl.getPhotosInterface().getInfo(cf.getImagen().getId(), null); //, null)
                JDialog1 editarImagen = new JDialog1(this, true, photo);
                editarImagen.setVisible(true);
            } catch (FlickrException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_imgsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList imgs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
